buildscript {

    ext {

        // 开始: 配置 Gradle 插件版本
        dependencyManagementPluginVersion = "1.0.11.RELEASE"
        springBootGradlePluginVersion = "2.4.13"
        // 结束: 配置 Gradle 插件版本

        // 开始: 配置 spring boot/cloud 依赖版本
        springBootDependenciesVersion = "2.4.13"
        springCloudDependenciesVersion = "2020.0.5"
        springCloudAlibabaDependenciesVersion = "2021.0.5.0"
        // 结束: 配置 spring boot/cloud 依赖版本

        // 开始: 配置 单元测试 依赖版本
        junitVersion = "4.12"
        hamcrestCoreVersion = "1.3"
        // 结束: 配置 单元测试 依赖版本

        // 开始: 配置 接口文档 依赖版本
        // swagger annotations
        swaggerAnnotationsVersion = "1.5.24"
        // swagger models
        swaggerModelsVersion = "1.5.24"
        // swagger annotations v3
        swaggerAnnotations3Version = "2.2.15"
        // swagger models v3
        swaggerModels3Version = "2.2.15"
        // swagger ui
        springfoxBootStarterVersion = "3.0.0"
        // swagger ui
        swaggerBootstrapUiVersion = "1.9.6"
        // 结束: 配置 接口文档 依赖版本

    }

    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/spring' }
        maven { url 'https://maven.aliyun.com/repository/spring-plugin' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/releases' }
        maven { url 'https://maven.aliyun.com/repository/snapshots' }
        maven { url 'https://maven.aliyun.com/repository/apache-snapshots' }
        maven { url 'https://maven.aliyun.com/repository/grails-core' }
        maven { url 'https://maven.aliyun.com/repository/mapr-public' }
        maven { url 'https://maven.aliyun.com/repository/staging-alpha-group' }
        maven { url 'https://maven.aliyun.com/repository/staging-alpha' }
        mavenLocal()
    }

    dependencies {
        classpath group: "io.spring.gradle", name: "dependency-management-plugin", version: "$dependencyManagementPluginVersion"
        classpath group: "org.springframework.boot", name: "spring-boot-gradle-plugin", version: "$springBootGradlePluginVersion"
    }

}

allprojects {

    apply plugin: "java"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "org.springframework.boot"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/spring' }
        maven { url 'https://maven.aliyun.com/repository/spring-plugin' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/releases' }
        maven { url 'https://maven.aliyun.com/repository/snapshots' }
        maven { url 'https://maven.aliyun.com/repository/apache-snapshots' }
        maven { url 'https://maven.aliyun.com/repository/grails-core' }
        maven { url 'https://maven.aliyun.com/repository/mapr-public' }
        maven { url 'https://maven.aliyun.com/repository/staging-alpha-group' }
        maven { url 'https://maven.aliyun.com/repository/staging-alpha' }
        mavenLocal()
    }

    dependencyManagement {

        imports {

            // 开始: 配置 spring boot/cloud 依赖版本
            mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootDependenciesVersion"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudDependenciesVersion"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:$springCloudAlibabaDependenciesVersion"
            // 结束: 配置 spring boot/cloud 依赖版本

        }

        dependencies {

            // 开始: 配置 单元测试 依赖版本
            dependency "junit:junit:$junitVersion"
            dependency "org.hamcrest:hamcrest-core:$hamcrestCoreVersion"
            // 结束: 配置 单元测试 依赖版本

            // 开始: 配置 接口文档 依赖版本
            // swagger annotations
            dependency "io.swagger:swagger-annotations:$swaggerAnnotationsVersion"
            // swagger models
            dependency "io.swagger:swagger-models:$swaggerModelsVersion"
            // swagger annotations v3
            dependency "io.swagger.core.v3:swagger-annotations:$swaggerAnnotations3Version"
            // swagger models v3
            dependency "io.swagger.core.v3:swagger-models:$swaggerModels3Version"
            // swagger ui
            dependency "io.springfox:springfox-boot-starter:$springfoxBootStarterVersion"
            // swagger ui
            dependency "com.github.xiaoymin:swagger-bootstrap-ui:$swaggerBootstrapUiVersion"
            // 结束: 配置 接口文档 依赖版本

        }

    }

    dependencies {
        testImplementation group: "org.springframework.boot", name: "spring-boot-starter-test"
        testImplementation group: "junit", name: "junit"
        testImplementation group: "org.hamcrest", name: "hamcrest-core"
    }

}

group 'org.dragonframework'
version '1.0.0-SNAPSHOT'

bootJar {
    enabled = false
}
